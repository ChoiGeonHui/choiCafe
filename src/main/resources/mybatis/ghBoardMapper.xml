<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.adnstyle.choicafe.repository.GhBoardRepository">
    <resultMap id="simpleBoard" type="com.adnstyle.choicafe.domain.GhBoard">
        <id property="seq" column="seq"/>
        <result property="parentSeq" column="parent_seq"/>
        <result property="groupOrd" column="group_ord"/>
        <result property="depth" column="depth"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="viewCount" column="view_conunt"/>
        <result property="delYN" column="del_yn"/>
        <result property="createdBy" column="created_by"/>
        <result property="createdDate" column="created_date"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="modifiedDate" column="modified_date"/>
    </resultMap>

    <sql id="selectCTE">
        with recursive rec as
            (
            select seq,
                   parent_seq,
                   cast(lpad(seq, 5, 0) as char(100)) as group_ord,
                   0                                  as depth,
                   title,
                   content,
                   view_conunt,
                   del_yn,
                   created_by,
                   created_date,
                   modified_by,
                   modified_date
             from gh_board
             where parent_seq = 0
             union all
             select c.seq,
                    c.parent_seq,
                    concat(rec.group_ord, lpad(c.seq, 5, 0)) as group_ord,
                    rec.depth + 1                            as depth,
                    c.title,
                    c.content,
                    c.view_conunt,
                    c.del_yn,
                    c.created_by,
                    c.created_date,
                    c.modified_by,
                    c.modified_date
             from gh_board c
                 inner join rec on c.parent_seq = rec.seq
        )
        select seq,
               parent_seq,
               group_ord,
               depth,
               title,
               content,
               view_conunt,
               del_yn,
               created_by,
               created_date,
               modified_by,
               modified_date
        from rec
    </sql>



    <sql id="selectBoard">
        select seq,
               parent_seq,
               title,
               content,
               view_conunt,
               del_yn,
               created_by,
               created_date,
               modified_by,
               modified_date
        from gh_board
    </sql>

    <sql id="whereSQL">
        where del_yn = 'N'
        <if test="searchWord != null and searchWord != ''">

            <choose>
                <when test="searchName == 'all'">
                    and (title like concat('%',#{searchWord},'%') or content like concat('%',#{searchWord},'%'))
                </when>
                <when test="searchName == 'title'">
                    and title like concat('%',#{searchWord},'%')
                </when>
                <otherwise>
                    and content like concat('%',#{searchWord},'%')
                </otherwise>

            </choose>

        </if>
    </sql>


    <select id="selectCount" resultType="int">
        select count(*)
        from gh_board
        <include refid="whereSQL"/>
    </select>

    <select id="selectGhBoardBySeq" resultMap="simpleBoard">
        <include refid="selectBoard"/>
        where seq = #{seq}
    </select>


    <select id="selectBoardList" resultMap="simpleBoard">
        <include refid="selectCTE"/>
        <include refid="whereSQL"/>
        order by substr(group_ord,1,5) desc, group_ord asc
        limit #{PageStart}, #{perPageNum};
    </select>

    <insert id="insertBoard" useGeneratedKeys="true" keyProperty="seq">
        insert into gh_board
            (
            parent_seq,
            title,
            content
            )
        values
            (
             <if test="parentSeq == null or parentSeq == ''">
                 0,
             </if>
             <if test="parentSeq != null">
                 #{parentSeq},
             </if>
             #{title},
             #{content}
             )
    </insert>


    <update id="updateBoard">
        update gh_board
        set title = #{title},
            content = #{content}
        where seq = #{seq};
    </update>

    <update id="deleteBoard">
        update gh_board
        set del_yn = 'Y'
        where seq in
        <foreach collection="seq" item="seq" open="(" close=")" separator=",">
            #{seq}
        </foreach>
    </update>


</mapper>